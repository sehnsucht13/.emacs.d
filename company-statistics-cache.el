(setq company-statistics--scores #s(hash-table size 400 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("printf" (((:file "/home/yavor/pprojects/lispy/basicrepl.c") . 1) ((:keyword "while") . 1) (c-mode . 1) (nil . 1)) "console" (((:file "/home/yavor/pprojects/JSExtTest/borderify.js") . 1) (js-mode . 1) (nil . 1)) "log" (((:file "/home/yavor/pprojects/JSExtTest/borderify.js") . 1) (js-mode . 1) ((:symbol "console") . 1) (nil . 1)) ":kill-buffer" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 3) ((:keyword "setq") . 3) (emacs-lisp-mode . 3) (nil . 3)) "~/.emacs.d/" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) (emacs-lisp-mode . 1) (nil . 1)) "t" (((:file "/home/yavor/.emacs.d/init.el") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) (emacs-lisp-mode . 1) (nil . 1)) "~/Org/Todo.org" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 3) ((:keyword "setq") . 3) (emacs-lisp-mode . 3) (nil . 3)) ":config" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 3) ((:keyword "use-package") . 2) (emacs-lisp-mode . 2) (nil . 2)) "bookmark-load" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) (emacs-lisp-mode . 1) (nil . 1)) "org-cycle" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "defun") . 1) (emacs-lisp-mode . 1) (nil . 1)) ":prepend" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "def" (((:file "/home/yavor/pprojects/testt.py") . 1) ((:keyword "print") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "string.h" ((c-mode . 1) (nil . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1)) "ctype.h" (((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1) (c-mode . 1) (nil . 1)) "math.h" ((c-mode . 1) (nil . 1)) "/usr/" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "urwid" (((:keyword "print") . 1) ((:keyword "return") . 1) ((:keyword "else") . 1) ((:keyword "def") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) "widget" (((:keyword "else") . 1)) "input" (((:file "/home/yavor/pprojects/lispy/basicrepl.c") . 3) ((:keyword "while") . 3) (c-mode . 3) (nil . 3)) "readline" (((:file "/home/yavor/pprojects/lispy/basicrepl.c") . 1) ((:keyword "while") . 1) (c-mode . 1) (nil . 1)) "signal.h" ((c-mode . 1) (nil . 1)) "imaplib" (((:keyword "def") . 1)) "class" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "import" (((:file "/home/yavor/pprojects/RSMC/UITest.py") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:file "/home/yavor/Org/Agenda.org[*Org Src Agenda.org[ python ]*]") . 1) (python-mode . 1) (nil . 1)) "mailConnection" (((:keyword "print") . 1) ((:file "/home/yavor/pprojects/RSMC/FetchMail.py") . 1) ((:keyword "def") . 1) (python-mode . 1) (nil . 1)) "company-lsp-enable-recompletion" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "lsp-mode" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 2) ((:keyword "use-package") . 2) (emacs-lisp-mode . 2) (nil . 2)) "numPackets" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) (python-mode . 1) (nil . 1) ((:keyword "while") . 1)) "random" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) (python-mode . 2) (nil . 2) ((:keyword "def") . 8) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1) ((:symbol "corruptRNG") . 2) ((:keyword "if") . 2) ((:symbol "nil") . 1) ((:keyword "self") . 1)) "seed" (((:keyword "def") . 5) ((:symbol "timeSeed") . 1) ((:symbol "corruptRNG") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:symbol "random") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "timeSeed" (((:keyword "def") . 3)) "corruptRNG" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) (python-mode . 2) (nil . 2) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1) ((:keyword "if") . 2)) "flycheck" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "select" (((:file "/home/yavor/pprojects/RSMC/FetchMail.py") . 1) ((:symbol "mailConnection") . 1) (python-mode . 1) (nil . 1)) "company-backends" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "push") . 1) (emacs-lisp-mode . 1) (nil . 1)) "AF_INET" (((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "list" (((:file "/home/yavor/pprojects/RSMC/FetchMail.py") . 1) ((:symbol "mailConnection") . 1) (python-mode . 1) (nil . 1)) "pprint" (((:file "/home/yavor/pprojects/RSMC/FetchMail.py") . 1) (python-mode . 1) (nil . 1)) "pandoc-@-hydra/body" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "lambda") . 1) (emacs-lisp-mode . 1) (nil . 1)) "nackStatus" ((python-mode . 1) (nil . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 5) ((:keyword "return") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:keyword "print") . 1)) "ackStatus" ((python-mode . 1) (nil . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 4) ((:keyword "return") . 1) ((:keyword "def") . 1) ((:keyword "print") . 1)) "testvar" (((:file "/home/yavor/Org/Agenda.org[*Org Src Agenda.org[ python ]*]") . 1) ((:keyword "return") . 1) (python-mode . 1) (nil . 1)) "alert" (((:file "/home/yavor/pprojects/JSExtTest/background.js") . 1) (js2-mode . 1) (nil . 1)) "payload" (((:keyword "def") . 1) ((:keyword "print") . 1)) "open" (((:file "/home/yavor/pprojects/JSExtTest/background.js") . 1) ((:symbol "window") . 1) ((:keyword "return") . 1) (js2-mode . 1) (nil . 1)) "format" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 3) ((:symbol "nil") . 10) ((:keyword "print") . 10) (python-mode . 10) (nil . 10) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 7)) "mybook" (((:keyword "function") . 1)) "seqNum" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2) ((:keyword "print") . 2) (python-mode . 2) (nil . 2)) "name" (((:keyword "function") . 1)) "insert" (((:keyword "with-temp-buffer") . 1) (emacs-lisp-mode . 1) (nil . 1)) "write-file" (((:keyword "with-temp-buffer") . 2) (emacs-lisp-mode . 2) (nil . 2) ((:file "/home/yavor/pprojects/helm-org-wiki/helm-org-wiki.el") . 1)) "append" (((:symbol "body") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "require_version" (((:symbol "gi") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "__name__" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) "defhydra" (((:file "/home/yavor/pprojects/hydra-collection/elpy-hydra.el") . 6) (emacs-lisp-mode . 6) (nil . 6) ((:keyword "defhydra") . 5)) "serverSocket" (((:keyword "print") . 2) ((:keyword "import") . 1)) "hydra-elpy/body/body" (((:file "/home/yavor/pprojects/hydra-collection/elpy-hydra.el") . 2) ((:keyword "defhydra") . 2) (emacs-lisp-mode . 2) (nil . 2)) "body" (((:keyword "in") . 1)) "hydra-elpy/code-body/heads" (((:file "/home/yavor/pprojects/hydra-collection/elpy-hydra.el") . 1) ((:keyword "defhydra") . 1) (emacs-lisp-mode . 1) (nil . 1)) "listen" ((python-mode . 1) (nil . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:symbol "clientSocket") . 1) ((:keyword "print") . 1)) "global-set-key" (((:file "/home/yavor/pprojects/hydra-collection/elpy-hydra.el") . 1) ((:keyword "defhydra") . 1) (emacs-lisp-mode . 1) (nil . 1)) "pcktDict" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2) ((:keyword "print") . 2) (python-mode . 2) (nil . 2)) "connectionID" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 3) (python-mode . 3) (nil . 3) ((:keyword "if") . 2) ((:keyword "else") . 1)) "ExitMainLoop" (((:keyword "raise") . 1) ((:keyword "in") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) "recieved" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "sendPkt" (((:keyword "def") . 1)) "pickle" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) (python-mode . 1) (nil . 1)) "pickleDict" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "Overlay" (((:symbol "urwid") . 1) ((:keyword "raise") . 1) (python-mode . 1) (nil . 1)) "SolidFill" (((:symbol "urwid") . 1) ((:keyword "raise") . 1) (python-mode . 1) (nil . 1)) "align" (((:keyword "raise") . 1) (python-mode . 1) (nil . 1)) "width" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) "valign" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) "height" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) "strpcktDict" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2) ((:keyword "print") . 1) (python-mode . 2) (nil . 2) ((:keyword "return") . 1)) "MainLoop" (((:symbol "urwid") . 1) (python-mode . 1) (nil . 1)) "palette" ((python-mode . 1) (nil . 1)) "run" (((:symbol "nil") . 1) ((:keyword "in") . 1) ((:symbol "myloop") . 1) (python-mode . 1) (nil . 1)) "bottom_w" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1) ((:keyword "raise") . 1) (python-mode . 1) (nil . 1)) "jsonPacket" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 15) ((:keyword "if") . 4) (python-mode . 15) (nil . 15) ((:keyword "print") . 9) ((:keyword "else") . 2)) "argv" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:symbol "sys") . 2) ((:keyword "if") . 2) (python-mode . 2) (nil . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) "nonlocal" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:keyword "def") . 1) (python-mode . 1) (nil . 1)) "dopStuff" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1) ((:keyword "raise") . 1) (python-mode . 1) (nil . 1)) "Frame" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1) ((:symbol "urwid") . 1) ((:keyword "raise") . 1) (python-mode . 1) (nil . 1)) "SeqNum" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 12) ((:keyword "print") . 8) (python-mode . 12) (nil . 12) ((:keyword "if") . 3) ((:keyword "else") . 1)) "Columns" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1) ((:symbol "urwid") . 1) (python-mode . 1) (nil . 1)) "myColumns" (((:keyword "raise") . 1) ((:keyword "in") . 1)) "myloop" (((:keyword "raise") . 1) ((:keyword "else") . 1)) "jsonStuff" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 3) ((:keyword "print") . 3) (python-mode . 3) (nil . 3)) "stop" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1) ((:symbol "myloop") . 1) (python-mode . 1) (nil . 1)) "someKey" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1) (python-mode . 1) (nil . 1)) "dumps" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:symbol "json") . 2) ((:keyword "print") . 1) (python-mode . 2) (nil . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1) ((:keyword "return") . 1)) "newColumns" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1) (python-mode . 1) (nil . 1)) "responseStatus" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "__main__" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "unhandled_input" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1) (python-mode . 1) (nil . 1)) "handleKeys" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1) ((:symbol "unhandled_input") . 1) (python-mode . 1) (nil . 1)) "draw_screen" (((:keyword "in") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1) ((:symbol "myloop") . 1) ((:keyword "else") . 1) (python-mode . 1) (nil . 1)) "prevPktNum" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 4) ((:keyword "if") . 1) (python-mode . 4) (nil . 4) ((:keyword "global") . 1) ((:keyword "print") . 2)) "True" (((:keyword "if") . 1)) "displayStatus" (((:keyword "if") . 1) ((:keyword "else") . 1)) "False" (((:keyword "if") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1) (python-mode . 1) (nil . 1)) "makeserverResponsePkt" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 3) ((:keyword "print") . 1) (python-mode . 3) (nil . 3) ((:keyword "if") . 1) ((:keyword "else") . 1)) "org-agenda-mode" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 4) ((:keyword "interactive") . 4) (emacs-lisp-mode . 4) (nil . 4)) "include" (((:symbol "nil") . 3) (nil . 3) ((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 1) ((:file "/home/yavor/pprojects/openglFuckery/main.cpp") . 1) ((:file "/home/yavor/pprojects/openglFuckery/mainTest.cpp") . 1) (c++-mode . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1) (c-mode . 1)) "responsePayload" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 4) ((:keyword "print") . 1) (python-mode . 4) (nil . 4) ((:keyword "if") . 2) ((:keyword "else") . 1)) "string" (((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 1) (c++-mode . 1) (nil . 1)) "isDuplicate" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "bookmark-set" ((emacs-lisp-mode . 1) (nil . 1)) "org-agenda-clock-in" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 2) ((:keyword "interactive") . 2) (emacs-lisp-mode . 2) (nil . 2)) "yav-go-up-org-heading" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "pktPayload" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2) ((:keyword "def") . 1) (python-mode . 2) (nil . 2) ((:keyword "print") . 1)) "currSeq" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 4) ((:keyword "def") . 1) (python-mode . 4) (nil . 4) ((:keyword "if") . 2) ((:keyword "else") . 1)) "cout" (((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 1) ((:symbol "std") . 1) (c++-mode . 1) (nil . 1)) "arrivalTime" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2) ((:keyword "def") . 1) (python-mode . 2) (nil . 2) ((:keyword "if") . 1)) "randint" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2) ((:symbol "dataRNG") . 2) ((:keyword "def") . 2) (python-mode . 2) (nil . 2)) "secondNAme" (((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 1) ((:keyword "const") . 1) (c++-mode . 1) (nil . 1)) "std" (((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 1) ((:keyword "using") . 1) (c++-mode . 1) (nil . 1)) "dataRNG" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2) ((:keyword "def") . 2) (python-mode . 2) (nil . 2)) "createPkt" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:keyword "def") . 1) (python-mode . 1) (nil . 1)) "bind-key" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "sendPktAbove" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1) ((:keyword "else") . 1) (python-mode . 1) (nil . 1)) "index" (((:keyword "while") . 1)) "time" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2) ((:symbol "time") . 2) ((:keyword "def") . 1) (python-mode . 2) (nil . 2) ((:keyword "if") . 1)) "packet" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2) ((:keyword "def") . 2) (python-mode . 2) (nil . 2)) "org-agenda-mode-map" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 4) (emacs-lisp-mode . 4) (nil . 4) ((:keyword "interactive") . 3)) "org-agenda-exit" (((:keyword "setq") . 1)) "recv" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:symbol "clientSocket") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "payloadData" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:keyword "def") . 1) (python-mode . 1) (nil . 1)) "timeLength" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:keyword "def") . 1) (python-mode . 1) (nil . 1)) "calendar-backward-week" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) (emacs-lisp-mode . 1) (nil . 1)) "responsePkt" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2) ((:keyword "print") . 1) (python-mode . 2) (nil . 2) ((:keyword "def") . 1)) "lambda" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 2) ((:keyword "interactive") . 1) (emacs-lisp-mode . 2) (nil . 2) ((:keyword "use-package") . 1)) "calendar-mode-map" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) (emacs-lisp-mode . 1) (nil . 1)) "moveBackFlag" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "resendStatus" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "isNACK" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "packetPayloadJson" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2) ((:keyword "if") . 2) (python-mode . 2) (nil . 2)) "requests" (((:keyword "import") . 4) (python-mode . 4) (nil . 4) ((:file "/home/yavor/Org/Todo.org[*Org Src Todo.org[ python ]*]") . 1) ((:file "/home/yavor/Org/Agenda.org[*Org Src Agenda.org[ python ]*]") . 1)) "outline-up-heading" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "defun") . 1) (emacs-lisp-mode . 1) (nil . 1)) "org-src-fontify-natively" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "org-babel-do-load-languages" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "glad/glad.h" (((:file "/home/yavor/pprojects/openglFuckery/main.cpp") . 1)) "glad/" (((:file "/home/yavor/pprojects/openglFuckery/main.cpp") . 1)) "~/Org/School.org" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "question" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "corruptProb" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) (python-mode . 5) (nil . 5) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 4) ((:keyword "if") . 4) ((:keyword "print") . 1)) "SOCK_STREAM" (((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "clientSocket" (((:keyword "print") . 2) ((:keyword "nonlocal") . 1)) "connect" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:symbol "clientSocket") . 1) (python-mode . 1) (nil . 1)) "serverName" (((:keyword "print") . 1)) "serverSocketPort" (((:keyword "print") . 1)) "connectionStatus" (((:keyword "global") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) (python-mode . 1) (nil . 1)) "breaks" (((:file "/home/yavor/pprojects/JSExtTest/background.js") . 1) ((:symbol "mybook") . 1) ((:keyword "function") . 1) (js2-mode . 1) (nil . 1)) "send" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2) ((:symbol "clientSocket") . 2) ((:keyword "print") . 3) (python-mode . 6) (nil . 6) ((:keyword "def") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 4) ((:symbol "serverSocket") . 2) ((:symbol "connectionID") . 2) ((:keyword "if") . 1) ((:keyword "else") . 1)) "loads" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:symbol "json") . 2) (python-mode . 1) (nil . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 3) ((:keyword "def") . 3) ((:keyword "print") . 1)) "newButton" (((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "hydra-elpy-code/heads" (((:file "/home/yavor/pprojects/hydra-collection/elpy-hydra.el") . 2) ((:keyword "defhydra") . 2) (emacs-lisp-mode . 2) (nil . 2)) "hydra-elpy-main/body" (((:file "/home/yavor/pprojects/hydra-collection/elpy-hydra.el") . 2) ((:keyword "defhydra") . 2) (emacs-lisp-mode . 2) (nil . 2)) "encode" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 4) ((:symbol "strpcktDict") . 1) ((:keyword "print") . 3) (python-mode . 7) (nil . 7) ((:symbol "testPKT") . 1) ((:keyword "def") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 3) ((:symbol "responsePayload") . 3) ((:keyword "if") . 1) ((:keyword "else") . 1) ((:symbol "payload") . 1) ((:symbol "pktPayload") . 1)) "timeRNG" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 3) ((:keyword "def") . 3) (python-mode . 3) (nil . 3)) "testPKT" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:keyword "def") . 1) (python-mode . 1) (nil . 1)) "min_height" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1) ((:keyword "raise") . 1) (python-mode . 1) (nil . 1)) "uniform" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 5) ((:symbol "random") . 1) ((:keyword "def") . 4) (python-mode . 6) (nil . 6) ((:symbol "timeSeed") . 1) ((:symbol "timeRNG") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1) ((:symbol "corruptRNG") . 2) ((:keyword "if") . 2) ((:symbol "nil") . 1)) "Random" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 3) ((:symbol "random") . 3) ((:keyword "def") . 3) (python-mode . 3) (nil . 3)) "prevSeqNum" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 2) ((:keyword "if") . 1) (python-mode . 2) (nil . 2) ((:keyword "print") . 1)) "responseNum" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 2) ((:keyword "print") . 2) (python-mode . 2) (nil . 2)) "raise" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "attr" (((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "post" (((:symbol "requests") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "message" ((lisp-interaction-mode . 1) (nil . 1)) "helm-M-x-fuzzy-match" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "org-return" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 2) ((:keyword "interactive") . 2) (emacs-lisp-mode . 2) (nil . 2)) "add-to-list" (((:file "/home/yavor/.emacs.d/init.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "package-archives" (((:file "/home/yavor/.emacs.d/init.el") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "find-file" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "defun") . 1) (emacs-lisp-mode . 1) (nil . 1)) "~/Wiki/index.org" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "defun") . 1) (emacs-lisp-mode . 3) (nil . 3) ((:file "/home/yavor/pprojects/helm-org-wiki/helm-org-wiki.el") . 1) ((:keyword "defcustom") . 1)) "evil-leader/set-key-for-mode" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 9) ((:keyword "interactive") . 5) (emacs-lisp-mode . 9) (nil . 9) ((:keyword "setq") . 1) ((:keyword "use-package") . 3)) "helm-org-parent-headings" (((:file "/home/yavor/Org/Todo.org[*Org Src Todo.org[ emacs-lisp ]*]") . 1) (emacs-lisp-mode . 1) (nil . 1)) "currSeqNum" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 10) ((:keyword "if") . 2) (python-mode . 10) (nil . 10) ((:keyword "print") . 6) ((:keyword "global") . 1) ((:keyword "else") . 1)) "serverResponse" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "set_alarm_at" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1) ((:symbol "myloop") . 1) ((:keyword "else") . 1) (python-mode . 1) (nil . 1)) "pktStatus" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "receiver" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "moving" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "back" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "state" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "WAIT" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "FROM" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "BELO" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "seqNumber" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1) ((:keyword "return") . 1) (python-mode . 1) (nil . 1)) "respDict" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 2) ((:keyword "return") . 2) (python-mode . 2) (nil . 2)) "org-agenda-clock-out" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "org-agenda-clock-cancel" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "org-agenda-filter-by-tag" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "org-agenda-earlier" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "org-agenda-later" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "interactive") . 1) (emacs-lisp-mode . 1) (nil . 1)) "org-babel-load-languages" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "emacs-lisp" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "org-mode" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "org-confirm-babel-evaluate" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "use-package" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 3) ((:keyword "interactive") . 1) (emacs-lisp-mode . 3) (nil . 3) ((:keyword "setq") . 1)) "org-capture-templates" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "~/Org/" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 3) ((:keyword "setq") . 3) (emacs-lisp-mode . 3) (nil . 3)) "~/.emacs.d/bookmarks" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) (emacs-lisp-mode . 1) (nil . 1)) "myself_again" (((:file "/home/yavor/Wiki/index.org[*Org Src index.org[ python ]*]") . 1) ((:keyword "return") . 1) (python-mode . 1) (nil . 1)) "irony-parse-buffer-async" (((:file "/home/yavor/yes.scratch") . 1) (emacs-lisp-mode . 1) (nil . 1)) "int" ((c-mode . 1) (nil . 1)) "c-mode" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 2) ((:keyword "use-package") . 1) (emacs-lisp-mode . 2) (nil . 2) ((:keyword "with-eval-after-load") . 1)) "irony-parse-buffer" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 2) ((:keyword "use-package") . 2) (emacs-lisp-mode . 2) (nil . 2)) "editline/" ((c-mode . 5) (nil . 5) ((:file "/home/yavor/pprojects/lispy/basicrepl.c") . 1)) "editline/readline.h" ((c-mode . 2) (nil . 2) ((:file "/home/yavor/pprojects/lispy/basicrepl.c") . 1)) "histedit.h" ((c-mode . 2) (nil . 2) ((:file "/home/yavor/pprojects/lispy/basicrepl.c") . 1)) "add_history" ((c-mode . 2) (nil . 2) ((:file "/home/yavor/pprojects/lispy/basicrepl.c") . 1) ((:keyword "while") . 1)) "stdio.h" (((:file "/home/yavor/pprojects/lispy/basicrepl.c") . 1) (c-mode . 2) (nil . 2)) "stdlib.h" (((:file "/home/yavor/pprojects/lispy/basicrepl.c") . 1) (c-mode . 1) (nil . 1)) "/usr/bin/cquery" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "company-lsp-cache-candidates" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "company-lsp-async" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "with-eval-after-load" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "objc-mode" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "with-eval-after-load") . 1) (emacs-lisp-mode . 1) (nil . 1)) "lsp-cquery-enable" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "with-eval-after-load") . 1) (emacs-lisp-mode . 1) (nil . 1)) ":init" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "lsp-mode-hook" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "lsp-ui-mode" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "c-mode-hook" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "flycheck-mode" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 2) ((:keyword "use-package") . 2) (emacs-lisp-mode . 2) (nil . 2)) "c++-mode-hook" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "evil-leader/set-key" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 2) ((:keyword "use-package") . 2) (emacs-lisp-mode . 2) (nil . 2)) "pandoc-@-hydra/pandoc-main-hydra/body-and-exit" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "lambda") . 1) (emacs-lisp-mode . 1) (nil . 1)) "js2-mode" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "evil-define-key" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "directory-name-p" (((:file "/home/yavor/pprojects/helm-org-wiki/helm-org-wiki.el") . 1) ((:keyword "if") . 1) (emacs-lisp-mode . 2) (nil . 2)) "WIKI-PATH" (((:file "/home/yavor/pprojects/helm-org-wiki/helm-org-wiki.el") . 3) ((:keyword "if") . 1) (emacs-lisp-mode . 3) (nil . 3) ((:keyword "progn") . 1) ((:keyword "with-temp-buffer") . 1)) "make-directory" (((:file "/home/yavor/pprojects/helm-org-wiki/helm-org-wiki.el") . 1) ((:keyword "progn") . 1) (emacs-lisp-mode . 1) (nil . 1)) "set-buffer" ((emacs-lisp-mode . 1) (nil . 1)) "switch-to-buffer" ((emacs-lisp-mode . 1) (nil . 1)) "generate-new-buffer" ((emacs-lisp-mode . 2) (nil . 2) ((:file "/home/yavor/pprojects/helm-org-wiki/helm-org-wiki.el") . 1) ((:keyword "progn") . 1)) "~/Wiki/" ((emacs-lisp-mode . 1) (nil . 1)) "file-directory-p" ((emacs-lisp-mode . 2) (nil . 2) ((:file "/home/yavor/pprojects/helm-org-wiki/helm-org-wiki.el") . 1) ((:keyword "if") . 1)) "~/Wiki/Bash/" ((emacs-lisp-mode . 1) (nil . 1)) "with-temp-buffer" (((:file "/home/yavor/pprojects/helm-org-wiki/helm-org-wiki.el") . 1) ((:keyword "progn") . 1) (emacs-lisp-mode . 2) (nil . 2)) "concat" (((:file "/home/yavor/pprojects/helm-org-wiki/helm-org-wiki.el") . 1) ((:keyword "with-temp-buffer") . 1) (emacs-lisp-mode . 1) (nil . 1)) "helm-org-wiki-directory" (((:file "/home/yavor/pprojects/helm-org-wiki/helm-org-wiki.el") . 1) ((:keyword "helm-build-sync-source") . 1) (emacs-lisp-mode . 1) (nil . 1)) "repository" (((:symbol "gi") . 2) ((:keyword "from") . 2) (python-mode . 2) (nil . 2) ((:file "/home/yavor/gtktesting.py") . 1)) "Gtk" (((:keyword "import") . 3) (python-mode . 3) (nil . 3)) "hydra-elpy/body/hydra-elpy/code-body/heads" (((:file "/home/yavor/pprojects/hydra-collection/elpy-hydra.el") . 1) ((:keyword "defhydra") . 1) (emacs-lisp-mode . 1) (nil . 1)) "hydra-elpy-code/body" (((:file "/home/yavor/pprojects/hydra-collection/elpy-hydra.el") . 1) ((:keyword "defhydra") . 1) (emacs-lisp-mode . 1) (nil . 1)) "elpy-django-command" (((:file "/home/yavor/pprojects/hydra-collection/elpy-hydra.el") . 1) ((:keyword "defhydra") . 1) (emacs-lisp-mode . 1) (nil . 1)) "dired" (((:keyword "defun") . 1) (emacs-lisp-mode . 1) (nil . 1)) "evil-split-buffer" (((:keyword "defun") . 1) (emacs-lisp-mode . 1) (nil . 1)) "evil-window-bottom" (((:keyword "defun") . 1) (emacs-lisp-mode . 1) (nil . 1)) "dired-testing" (((:keyword "defun") . 1) (emacs-lisp-mode . 1) (nil . 1)) "pckDict" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)))) company-statistics--log [("pickleDict" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("pickle" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("loads" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:symbol "pickle") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 3)) ("recieved" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("pcktDict" (nil . 2) (python-mode . 2) ((:keyword "print") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2)) ("clientSocket" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("strpcktDict" (nil . 2) (python-mode . 2) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2)) ("encode" (nil . 2) (python-mode . 2) ((:keyword "print") . 1) ((:symbol "strpcktDict") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2)) ("recieved" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("recieved" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("clientSocket" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("connect" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "clientSocket") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("serverName" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("serverSocketPort" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("payload" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("argv" (nil . 2) (python-mode . 2) ((:keyword "if") . 2) ((:symbol "sys") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("nonlocal" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("clientSocket" (nil . 1) (python-mode . 1) ((:keyword "nonlocal") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("random" (nil . 1) (python-mode . 1) ((:keyword "def") . 6) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("seed" (nil . 1) (python-mode . 1) ((:keyword "def") . 5) ((:symbol "random") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("random" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("seed" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "random") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("timeRNG" (nil . 3) (python-mode . 3) ((:keyword "def") . 3) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 3)) ("timeRNG" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("random" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("seed" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "random") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("timeSeed" (nil . 1) (python-mode . 1) ((:keyword "def") . 3) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("random" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("uniform" (nil . 3) (python-mode . 3) ((:keyword "def") . 3) ((:symbol "random") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 3)) ("random" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("Random" (nil . 2) (python-mode . 2) ((:keyword "def") . 2) ((:symbol "random") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2)) ("timeSeed" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("seed" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "timeSeed") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("timeSeed" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("uniform" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "timeSeed") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("random" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("Random" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "random") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("corruptRNG" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("seed" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "corruptRNG") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("timeRNG" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("uniform" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "timeRNG") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("strpcktDict" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("sendPkt" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("clientSocket" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("send" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "clientSocket") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("testPKT" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("loads" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:symbol "json") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("recieved" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("jsonStuff" (nil . 3) (python-mode . 3) ((:keyword "print") . 3) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 3)) ("encode" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "testPKT") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("jsonStuff" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("SeqNum" (nil . 7) (python-mode . 7) ((:keyword "print") . 6) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 7)) ("SeqNum" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("SeqNum" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("recieved" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("dumps" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:symbol "json") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("pcktDict" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("loads" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "json") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("jsonPacket" (nil . 7) (python-mode . 7) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 7)) ("SeqNum" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("prevSeqNum" (nil . 2) (python-mode . 2) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 2)) ("jsonPacket" (nil . 1) (python-mode . 1) ((:keyword "print") . 6) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("SeqNum" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("jsonPacket" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("SeqNum" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("jsonStuff" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("jsonPacket" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("jsonPacket" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("SeqNum" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("jsonPacket" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("ackStatus" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 3)) ("jsonPacket" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("nackStatus" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 3)) ("__name__" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("__main__" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("argv" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:symbol "sys") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("responseStatus" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("prevSeqNum" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("responseNum" (nil . 2) (python-mode . 2) ((:keyword "print") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 2)) ("responseNum" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("ackStatus" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("nackStatus" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("ackStatus" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("nackStatus" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("attr" (nil . 1) (python-mode . 1) ((:keyword "import") . 1)) ("requests" (nil . 1) (python-mode . 1) ((:keyword "import") . 1)) ("requests" (nil . 1) (python-mode . 1) ((:keyword "import") . 1)) ("post" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:symbol "requests") . 1)) ("message" (nil . 1) (lisp-interaction-mode . 1)) ("helm-M-x-fuzzy-match" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("requests" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/yavor/Org/Todo.org[*Org Src Todo.org[ python ]*]") . 1)) ("org-return" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "interactive") . 2) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 2)) ("org-return" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("add-to-list" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/init.el") . 1)) ("package-archives" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/init.el") . 1)) ("find-file" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("~/Wiki/index.org" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("evil-leader/set-key-for-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("helm-org-parent-headings" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/yavor/Org/Todo.org[*Org Src Todo.org[ emacs-lisp ]*]") . 1)) ("currSeqNum" (nil . 10) (python-mode . 10) ((:keyword "if") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 10)) ("corruptProb" (nil . 1) (python-mode . 1) ((:keyword "if") . 4) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 4)) ("corruptRNG" (nil . 1) (python-mode . 1) ((:keyword "if") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("uniform" (nil . 1) (python-mode . 1) ((:keyword "if") . 2) ((:symbol "corruptRNG") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("random" (nil . 1) (python-mode . 1) ((:keyword "if") . 2) ((:symbol "corruptRNG") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("currSeqNum" (nil . 1) (python-mode . 1) ((:keyword "print") . 6) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("serverResponse" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("corruptProb" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("corruptProb" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("format" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 7)) ("format" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("format" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("format" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("corruptProb" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("serverSocket" (nil . 1) (python-mode . 1) ((:keyword "print") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("send" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:symbol "serverSocket") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 4)) ("SeqNum" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("currSeqNum" (nil . 1) (python-mode . 1) ((:keyword "global") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("currSeqNum" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("currSeqNum" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("jsonPacket" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("prevPktNum" (nil . 4) (python-mode . 4) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 4)) ("prevPktNum" (nil . 1) (python-mode . 1) ((:keyword "global") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("prevPktNum" (nil . 1) (python-mode . 1) ((:keyword "print") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("jsonPacket" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("jsonPacket" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("SeqNum" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("currSeqNum" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("currSeqNum" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("pktStatus" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("receiver" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("moving" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("back" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("state" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("WAIT" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("FROM" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("BELO" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("format" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("currSeqNum" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("recieved" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("format" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("seqNumber" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("ackStatus" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("nackStatus" (nil . 1) (python-mode . 1) ((:keyword "return") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("nackStatus" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("respDict" (nil . 2) (python-mode . 2) ((:keyword "return") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 2)) ("makeserverResponsePkt" (nil . 3) (python-mode . 3) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 3)) ("jsonPacket" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("SeqNum" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("serverSocket" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("send" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:symbol "serverSocket") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("dumps" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:symbol "json") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("respDict" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("responsePayload" (nil . 4) (python-mode . 4) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 4)) ("encode" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:symbol "responsePayload") . 3) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 3)) ("connectionID" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("isDuplicate" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("jsonPacket" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("currSeqNum" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("prevPktNum" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("responsePayload" (nil . 1) (python-mode . 1) ((:keyword "if") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("makeserverResponsePkt" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("jsonPacket" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("SeqNum" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("format" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("currSeqNum" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("connectionID" (nil . 1) (python-mode . 1) ((:keyword "if") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("connectionID" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("send" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:symbol "connectionID") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("responsePayload" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("encode" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:symbol "responsePayload") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("makeserverResponsePkt" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("jsonPacket" (nil . 1) (python-mode . 1) ((:keyword "else") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("SeqNum" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("connectionID" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("send" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:symbol "connectionID") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("responsePayload" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("encode" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:symbol "responsePayload") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("sendPktAbove" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("jsonPacket" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("time" (nil . 2) (python-mode . 2) ((:keyword "def") . 1) ((:symbol "time") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2)) ("packet" (nil . 2) (python-mode . 2) ((:keyword "def") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2)) ("random" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("Random" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "random") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("createPkt" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("dataRNG" (nil . 2) (python-mode . 2) ((:keyword "def") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2)) ("randint" (nil . 2) (python-mode . 2) ((:keyword "def") . 2) ((:symbol "dataRNG") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2)) ("currSeq" (nil . 4) (python-mode . 4) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 4)) ("ackStatus" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("clientSocket" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("send" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "clientSocket") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("payload" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("encode" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "payload") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("dataRNG" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("randint" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "dataRNG") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("payloadData" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("arrivalTime" (nil . 2) (python-mode . 2) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2)) ("timeLength" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("clientSocket" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("listen" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:symbol "clientSocket") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("clientSocket" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("recv" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:symbol "clientSocket") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("responsePkt" (nil . 2) (python-mode . 2) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2)) ("pktPayload" (nil . 2) (python-mode . 2) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2)) ("arrivalTime" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("time" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:symbol "time") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("numPackets" (nil . 1) (python-mode . 1) ((:keyword "while") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("packet" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("loads" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "json") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("loads" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "json") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("responsePkt" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("resendStatus" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("format" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("seqNum" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("format" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("seqNum" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("corruptRNG" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("random" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:symbol "corruptRNG") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("uniform" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:symbol "corruptRNG") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("corruptProb" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("moveBackFlag" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("format" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("seqNum" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("clientSocket" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("send" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:symbol "clientSocket") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("pktPayload" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("encode" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:symbol "pktPayload") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("packetPayloadJson" (nil . 2) (python-mode . 2) ((:keyword "if") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2)) ("isNACK" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("packetPayloadJson" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("currSeq" (nil . 1) (python-mode . 1) ((:keyword "if") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("currSeq" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("currSeq" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("random" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("uniform" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("lambda" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("outline-up-heading" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("org-cycle" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("yav-go-up-org-heading" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("org-agenda-mode-map" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 3) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("org-agenda-clock-in" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "interactive") . 2) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 2)) ("evil-leader/set-key-for-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("org-agenda-mode" (nil . 4) (emacs-lisp-mode . 4) ((:keyword "interactive") . 4) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 4)) ("org-agenda-clock-in" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("evil-leader/set-key-for-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("org-agenda-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("org-agenda-clock-out" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("evil-leader/set-key-for-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("org-agenda-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("org-agenda-clock-cancel" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("evil-leader/set-key-for-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("org-agenda-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("org-agenda-filter-by-tag" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("org-agenda-mode-map" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("org-agenda-earlier" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("org-agenda-mode-map" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("org-agenda-later" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("org-src-fontify-natively" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("org-babel-do-load-languages" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("org-babel-load-languages" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("emacs-lisp" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("evil-leader/set-key-for-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("org-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("org-confirm-babel-evaluate" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("org-capture-templates" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("~/Org/" (nil . 3) (emacs-lisp-mode . 3) ((:keyword "setq") . 3) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 3)) ("~/Org/Todo.org" (nil . 3) (emacs-lisp-mode . 3) ((:keyword "setq") . 3) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 3)) ("~/Org/" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("~/Org/Todo.org" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("~/Org/" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("~/Org/School.org" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("question" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("~/Org/Todo.org" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) (":kill-buffer" (nil . 3) (emacs-lisp-mode . 3) ((:keyword "setq") . 3) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 3)) (":kill-buffer" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) (":kill-buffer" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) (":prepend" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("bookmark-load" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("~/.emacs.d/" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("~/.emacs.d/bookmarks" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("myself_again" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/home/yavor/Wiki/index.org[*Org Src index.org[ python ]*]") . 1)) ("irony-parse-buffer-async" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/yavor/yes.scratch") . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1)) ("int" (nil . 1) (c-mode . 1)) ("signal.h" (nil . 1) (c-mode . 1)) ("math.h" (nil . 1) (c-mode . 1)) ("evil-leader/set-key-for-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 2) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("c-mode" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "use-package") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 2)) ("irony-parse-buffer" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "use-package") . 2) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 2)) ("evil-leader/set-key-for-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("irony-parse-buffer" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("string.h" (nil . 1) (c-mode . 1)) ("string.h" (nil . 1) (c-mode . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1)) ("editline/" (nil . 5) (c-mode . 5)) ("editline/readline.h" (nil . 2) (c-mode . 2)) ("editline/" (nil . 1) (c-mode . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1)) ("editline/" (nil . 1) (c-mode . 1)) ("editline/" (nil . 1) (c-mode . 1)) ("histedit.h" (nil . 2) (c-mode . 2)) ("add_history" (nil . 2) (c-mode . 2)) ("stdio.h" (nil . 1) (c-mode . 1) ((:file "/home/yavor/pprojects/lispy/basicrepl.c") . 1)) ("stdlib.h" (nil . 1) (c-mode . 1) ((:file "/home/yavor/pprojects/lispy/basicrepl.c") . 1)) ("editline/" (nil . 1) (c-mode . 1) ((:file "/home/yavor/pprojects/lispy/basicrepl.c") . 1)) ("editline/readline.h" (nil . 1) (c-mode . 1) ((:file "/home/yavor/pprojects/lispy/basicrepl.c") . 1)) ("histedit.h" (nil . 1) (c-mode . 1) ((:file "/home/yavor/pprojects/lispy/basicrepl.c") . 1)) ("readline" (nil . 1) (c-mode . 1) ((:keyword "while") . 1) ((:file "/home/yavor/pprojects/lispy/basicrepl.c") . 1)) ("add_history" (nil . 1) (c-mode . 1) ((:keyword "while") . 1) ((:file "/home/yavor/pprojects/lispy/basicrepl.c") . 1)) ("input" (nil . 3) (c-mode . 3) ((:keyword "while") . 3) ((:file "/home/yavor/pprojects/lispy/basicrepl.c") . 3)) ("printf" (nil . 1) (c-mode . 1) ((:keyword "while") . 1) ((:file "/home/yavor/pprojects/lispy/basicrepl.c") . 1)) ("input" (nil . 1) (c-mode . 1) ((:keyword "while") . 1) ((:file "/home/yavor/pprojects/lispy/basicrepl.c") . 1)) ("input" (nil . 1) (c-mode . 1) ((:keyword "while") . 1) ((:file "/home/yavor/pprojects/lispy/basicrepl.c") . 1)) (":config" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "use-package") . 2) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("/usr/" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("/usr/bin/cquery" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) (":config" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("company-lsp-cache-candidates" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("company-lsp-async" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("company-lsp-enable-recompletion" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("lsp-mode" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "use-package") . 2) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 2)) ("with-eval-after-load" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("c-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "with-eval-after-load") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("objc-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "with-eval-after-load") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("lsp-cquery-enable" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "with-eval-after-load") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) (":init" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("lsp-mode-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("lsp-ui-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("c-mode-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("flycheck" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("flycheck-mode" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "use-package") . 2) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 2)) ("c++-mode-hook" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("flycheck-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("lsp-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("company-backends" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "push") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1)) ("stdio.h" (nil . 1) (c-mode . 1)) ("evil-leader/set-key-for-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("evil-leader/set-key" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "use-package") . 2) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 2)) ("evil-leader/set-key" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("lambda" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("pandoc-@-hydra/body" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("pandoc-@-hydra/pandoc-main-hydra/body-and-exit" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "lambda") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("js2-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("evil-define-key" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("import" (nil . 1) (python-mode . 1) ((:file "/home/yavor/Org/Agenda.org[*Org Src Agenda.org[ python ]*]") . 1)) ("requests" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/yavor/Org/Agenda.org[*Org Src Agenda.org[ python ]*]") . 1)) ("testvar" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/home/yavor/Org/Agenda.org[*Org Src Agenda.org[ python ]*]") . 1)) ("~/Wiki/index.org" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defcustom") . 1) ((:file "/home/yavor/pprojects/helm-org-wiki/helm-org-wiki.el") . 1)) ("directory-name-p" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "if") . 1) ((:file "/home/yavor/pprojects/helm-org-wiki/helm-org-wiki.el") . 1)) ("WIKI-PATH" (nil . 3) (emacs-lisp-mode . 3) ((:keyword "if") . 1) ((:file "/home/yavor/pprojects/helm-org-wiki/helm-org-wiki.el") . 3)) ("make-directory" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "progn") . 1) ((:file "/home/yavor/pprojects/helm-org-wiki/helm-org-wiki.el") . 1)) ("WIKI-PATH" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "progn") . 1) ((:file "/home/yavor/pprojects/helm-org-wiki/helm-org-wiki.el") . 1)) ("set-buffer" (nil . 1) (emacs-lisp-mode . 1)) ("switch-to-buffer" (nil . 1) (emacs-lisp-mode . 1)) ("generate-new-buffer" (nil . 2) (emacs-lisp-mode . 2)) ("generate-new-buffer" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "progn") . 1) ((:file "/home/yavor/pprojects/helm-org-wiki/helm-org-wiki.el") . 1)) ("directory-name-p" (nil . 1) (emacs-lisp-mode . 1)) ("~/Wiki/" (nil . 1) (emacs-lisp-mode . 1)) ("file-directory-p" (nil . 2) (emacs-lisp-mode . 2)) ("~/Wiki/index.org" (nil . 1) (emacs-lisp-mode . 1)) ("~/Wiki/Bash/" (nil . 1) (emacs-lisp-mode . 1)) ("file-directory-p" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/pprojects/helm-org-wiki/helm-org-wiki.el") . 1)) ("with-temp-buffer" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "progn") . 1) ((:file "/home/yavor/pprojects/helm-org-wiki/helm-org-wiki.el") . 1)) ("with-temp-buffer" (nil . 1) (emacs-lisp-mode . 1)) ("insert" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "with-temp-buffer") . 1)) ("write-file" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "with-temp-buffer") . 2)) ("write-file" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "with-temp-buffer") . 1) ((:file "/home/yavor/pprojects/helm-org-wiki/helm-org-wiki.el") . 1)) ("concat" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "with-temp-buffer") . 1) ((:file "/home/yavor/pprojects/helm-org-wiki/helm-org-wiki.el") . 1)) ("WIKI-PATH" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "with-temp-buffer") . 1) ((:file "/home/yavor/pprojects/helm-org-wiki/helm-org-wiki.el") . 1)) ("helm-org-wiki-directory" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "helm-build-sync-source") . 1) ((:file "/home/yavor/pprojects/helm-org-wiki/helm-org-wiki.el") . 1)) ("require_version" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:symbol "gi") . 1)) ("repository" (nil . 2) (python-mode . 2) ((:keyword "from") . 2) ((:symbol "gi") . 2)) ("Gtk" (nil . 3) (python-mode . 3) ((:keyword "import") . 3)) ("Gtk" (nil . 1) (python-mode . 1) ((:keyword "import") . 1)) ("Gtk" (nil . 1) (python-mode . 1) ((:keyword "import") . 1)) ("repository" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:symbol "gi") . 1) ((:file "/home/yavor/gtktesting.py") . 1)) ("defhydra" (nil . 6) (emacs-lisp-mode . 6) ((:file "/home/yavor/pprojects/hydra-collection/elpy-hydra.el") . 6)) ("defhydra" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defhydra") . 5) ((:file "/home/yavor/pprojects/hydra-collection/elpy-hydra.el") . 1)) ("hydra-elpy/code-body/heads" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defhydra") . 1) ((:file "/home/yavor/pprojects/hydra-collection/elpy-hydra.el") . 1)) ("hydra-elpy/body/body" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "defhydra") . 2) ((:file "/home/yavor/pprojects/hydra-collection/elpy-hydra.el") . 2)) ("hydra-elpy/body/hydra-elpy/code-body/heads" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defhydra") . 1) ((:file "/home/yavor/pprojects/hydra-collection/elpy-hydra.el") . 1)) ("hydra-elpy/body/body" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defhydra") . 1) ((:file "/home/yavor/pprojects/hydra-collection/elpy-hydra.el") . 1)) ("hydra-elpy-main/body" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "defhydra") . 2) ((:file "/home/yavor/pprojects/hydra-collection/elpy-hydra.el") . 2)) ("global-set-key" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defhydra") . 1) ((:file "/home/yavor/pprojects/hydra-collection/elpy-hydra.el") . 1)) ("hydra-elpy-main/body" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defhydra") . 1) ((:file "/home/yavor/pprojects/hydra-collection/elpy-hydra.el") . 1)) ("hydra-elpy-code/heads" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "defhydra") . 2) ((:file "/home/yavor/pprojects/hydra-collection/elpy-hydra.el") . 2)) ("hydra-elpy-code/heads" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defhydra") . 1) ((:file "/home/yavor/pprojects/hydra-collection/elpy-hydra.el") . 1)) ("hydra-elpy-code/body" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defhydra") . 1) ((:file "/home/yavor/pprojects/hydra-collection/elpy-hydra.el") . 1)) ("defhydra" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defhydra") . 1) ((:file "/home/yavor/pprojects/hydra-collection/elpy-hydra.el") . 1)) ("elpy-django-command" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defhydra") . 1) ((:file "/home/yavor/pprojects/hydra-collection/elpy-hydra.el") . 1)) ("defhydra" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defhydra") . 1) ((:file "/home/yavor/pprojects/hydra-collection/elpy-hydra.el") . 1)) ("defhydra" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defhydra") . 1) ((:file "/home/yavor/pprojects/hydra-collection/elpy-hydra.el") . 1)) ("defhydra" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defhydra") . 1) ((:file "/home/yavor/pprojects/hydra-collection/elpy-hydra.el") . 1)) ("dired" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1)) ("evil-split-buffer" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1)) ("evil-window-bottom" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1)) ("dired-testing" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1))] company-statistics--index 0)