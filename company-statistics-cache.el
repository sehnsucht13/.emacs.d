(setq company-statistics--scores #s(hash-table size 400 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("printf" (((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1) (c-mode . 2) (nil . 2) ((:file "/home/yavor/pprojects/C-Programming/Chapter1.c") . 1)) "console" (((:file "/home/yavor/pprojects/JSExtTest/borderify.js") . 1) (js-mode . 1) (nil . 1)) "log" (((:file "/home/yavor/pprojects/JSExtTest/borderify.js") . 1) (js-mode . 1) ((:symbol "console") . 1) (nil . 1)) "backward" (((:file "/home/yavor/pprojects/openglFuckery/mainTest.cpp") . 1) ((:keyword "while") . 1) (c++-mode . 1) (nil . 1)) "unbind-key" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) (emacs-lisp-mode . 1) (nil . 1)) "t" (((:file "/home/yavor/.emacs.d/init.el") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) (emacs-lisp-mode . 1) (nil . 1)) "glad.h" (((:file "/home/yavor/pprojects/openglFuckery/mainTest.cpp") . 1) (c++-mode . 1) (nil . 1)) ":config" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) "package-menu-mode-map" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "unbind-key") . 1) (emacs-lisp-mode . 1) (nil . 1)) "evil-leader/set-key" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "string.h" (((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 3) (c-mode . 3) (nil . 3)) "signal.h" (((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1) (c-mode . 1) (nil . 1)) "def" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1) ((:file "/home/yavor/pprojects/testt.py") . 1) ((:keyword "print") . 1)) "stdlib.h" (((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1) (c-mode . 1) (nil . 1)) "ctype.h" (((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 2) (c-mode . 2) (nil . 2) ((:symbol "nil") . 1)) "assert" ((c-mode . 1) (nil . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1)) "assert.h" ((c-mode . 2) (nil . 2) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/Chapter1.c") . 1)) "urwid" (((:keyword "import") . 2) (python-mode . 11) (nil . 11) ((:keyword "self") . 3) ((:keyword "def") . 2) ((:file "/home/yavor/pprojects/RSMC/UITest.py") . 1) ((:keyword "print") . 1) ((:keyword "in") . 1) ((:keyword "return") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) "widget" ((python-mode . 3) (nil . 3) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 3) ((:symbol "myloop") . 3) ((:keyword "in") . 1) ((:keyword "else") . 2)) "strcmp" (((:file "/home/yavor/pprojects/C-Programming/Chapter1.c") . 1) (c-mode . 1) (nil . 1)) "sin" (((:file "/home/yavor/pprojects/C-Programming/Chapter1.c") . 1) (c-mode . 1) (nil . 1)) "stdio.h" ((c-mode . 1) (nil . 2) ((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 1) (c++-mode . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1)) "imaplib" (((:keyword "def") . 1)) "class" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) (python-mode . 1) (nil . 1)) "import" (((:keyword "import") . 3) (python-mode . 5) (nil . 5) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1) ((:file "/home/yavor/pprojects/RSMC/UITest.py") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2)) "mailConnection" (((:keyword "print") . 1) ((:file "/home/yavor/pprojects/RSMC/FetchMail.py") . 1) ((:keyword "def") . 1) (python-mode . 1) (nil . 1)) "mupdf/" (((:file "/home/yavor/pprojects/C-Programming/Chapter1.c") . 1) (c-mode . 1) (nil . 1)) "mupdf/pdf.h" (((:file "/home/yavor/pprojects/C-Programming/Chapter1.c") . 1) (c-mode . 1) (nil . 1)) "numPackets" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "random" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 9) ((:keyword "import") . 1) (python-mode . 9) (nil . 9) ((:keyword "self") . 2) ((:keyword "def") . 6)) "seed" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 7) ((:symbol "random") . 5) ((:keyword "self") . 2) (python-mode . 7) (nil . 7) ((:keyword "def") . 5) ((:symbol "timeSeed") . 1) ((:symbol "corruptRNG") . 1)) "timeSeed" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 4) ((:keyword "self") . 1) (python-mode . 4) (nil . 4) ((:keyword "def") . 3)) "corruptRNG" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2) ((:symbol "self") . 1) ((:keyword "self") . 1) (python-mode . 2) (nil . 2) ((:keyword "def") . 1)) "corruptSeed" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "select" (((:file "/home/yavor/pprojects/RSMC/FetchMail.py") . 1) ((:symbol "mailConnection") . 1) (python-mode . 1) (nil . 1)) "socket" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "AF_INET" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:keyword "import") . 2) (python-mode . 2) (nil . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) "list" (((:file "/home/yavor/pprojects/RSMC/FetchMail.py") . 1) ((:symbol "mailConnection") . 1) (python-mode . 1) (nil . 1)) "pprint" (((:file "/home/yavor/pprojects/RSMC/FetchMail.py") . 1) (python-mode . 1) (nil . 1)) "sys" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "nackStatus" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2) ((:keyword "print") . 5) (python-mode . 5) (nil . 5) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 3)) "ackStatus" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2) ((:keyword "print") . 5) (python-mode . 5) (nil . 5) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 3)) "except" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:keyword "try") . 1) (python-mode . 1) (nil . 1)) "alert" (((:file "/home/yavor/pprojects/JSExtTest/background.js") . 1) (js2-mode . 1) (nil . 1)) "payload" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 3) ((:keyword "print") . 3) (python-mode . 3) (nil . 3)) "open" (((:file "/home/yavor/pprojects/JSExtTest/background.js") . 1) ((:symbol "window") . 1) ((:keyword "return") . 1) (js2-mode . 1) (nil . 1)) "format" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:symbol "nil") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "mybook" (((:keyword "function") . 1)) "seqNum" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2) ((:keyword "print") . 2) (python-mode . 2) (nil . 2)) "name" (((:keyword "function") . 1)) "pckDict" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2) ((:keyword "print") . 2) (python-mode . 2) (nil . 2)) "jsonDict" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "append" (((:symbol "body") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "continue" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "__name__" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:keyword "if") . 2) (python-mode . 2) (nil . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) "serverHost" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "serverSocket" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 3) ((:keyword "import") . 2) (python-mode . 3) (nil . 3) ((:keyword "while") . 1)) "bind" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1) ((:symbol "serverSocket") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "body" (((:keyword "in") . 1)) "serverPort" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "listen" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1) ((:symbol "serverSocket") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "OSError" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:keyword "except") . 1) (python-mode . 1) (nil . 1)) "pcktDict" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2) ((:keyword "print") . 2) (python-mode . 2) (nil . 2)) "connectionID" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 2) ((:keyword "print") . 2) (python-mode . 2) (nil . 2)) "ExitMainLoop" (((:keyword "in") . 2) ((:keyword "else") . 1) ((:symbol "urwid") . 1) ((:keyword "raise") . 1) (python-mode . 1) (nil . 1)) "recieved" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 6) ((:keyword "print") . 6) (python-mode . 6) (nil . 6)) "sendPkt" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2) ((:keyword "print") . 1) (python-mode . 2) (nil . 2) ((:keyword "def") . 1)) "pickle" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2) ((:keyword "import") . 1) (python-mode . 3) (nil . 3) ((:keyword "print") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) "pickleDict" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "Overlay" (((:symbol "urwid") . 1) ((:keyword "raise") . 1) (python-mode . 1) (nil . 1)) "SolidFill" (((:symbol "urwid") . 1) ((:keyword "raise") . 1) (python-mode . 1) (nil . 1)) "align" (((:keyword "raise") . 1) (python-mode . 1) (nil . 1)) "width" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) "valign" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) "height" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) "strpcktDict" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2) ((:keyword "print") . 1) (python-mode . 2) (nil . 2) ((:keyword "return") . 1)) "MainLoop" (((:symbol "urwid") . 1) (python-mode . 1) (nil . 1)) "palette" ((python-mode . 1) (nil . 1)) "run" (((:symbol "nil") . 1) ((:keyword "else") . 1) ((:symbol "myloop") . 1) (python-mode . 1) (nil . 1)) "bottom_w" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1) ((:keyword "raise") . 1) (python-mode . 1) (nil . 1)) "jsonPacket" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 7) ((:keyword "if") . 1) (python-mode . 7) (nil . 7) ((:keyword "print") . 6)) "argv" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:symbol "sys") . 2) ((:keyword "if") . 2) (python-mode . 2) (nil . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) "nonlocal" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:keyword "def") . 1) (python-mode . 1) (nil . 1)) "dopStuff" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1) ((:keyword "raise") . 1) (python-mode . 1) (nil . 1)) "Frame" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1) ((:symbol "urwid") . 1) ((:keyword "raise") . 1) (python-mode . 1) (nil . 1)) "SeqNum" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 7) ((:keyword "print") . 6) (python-mode . 7) (nil . 7) ((:keyword "if") . 1)) "Columns" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1) ((:symbol "urwid") . 1) (python-mode . 1) (nil . 1)) "myColumns" (((:keyword "in") . 2) ((:keyword "else") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1) ((:keyword "raise") . 1) (python-mode . 1) (nil . 1)) "myloop" (((:keyword "in") . 1) ((:keyword "raise") . 1)) "jsonStuff" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 3) ((:keyword "print") . 3) (python-mode . 3) (nil . 3)) "stop" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1) ((:symbol "myloop") . 1) (python-mode . 1) (nil . 1)) "someKey" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1) (python-mode . 1) (nil . 1)) "dumps" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:symbol "json") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "newColumns" (((:keyword "in") . 1)) "responseStatus" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "__main__" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "unhandled_input" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1) (python-mode . 1) (nil . 1)) "handleKeys" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1) ((:symbol "unhandled_input") . 1) (python-mode . 1) (nil . 1)) "draw_screen" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 10) ((:symbol "myloop") . 8) ((:keyword "in") . 6) (python-mode . 10) (nil . 10) ((:symbol "nil") . 1) ((:keyword "else") . 4) ((:symbol "screen") . 1)) "set_alarm_at" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 2) ((:symbol "myloop") . 2) ((:keyword "else") . 2) (python-mode . 2) (nil . 2)) "screen" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1) ((:symbol "myloop") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "True" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 3) ((:keyword "def") . 1) (python-mode . 3) (nil . 3) ((:keyword "if") . 2)) "displayStatus" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 5) ((:keyword "if") . 2) (python-mode . 5) (nil . 5) ((:keyword "else") . 2) ((:keyword "global") . 1)) "False" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 4) ((:keyword "if") . 2) (python-mode . 5) (nil . 5) ((:keyword "import") . 1) ((:keyword "else") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:keyword "while") . 1)) "company-selection-wrap-around" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "tide-setup" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "include" (((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 2) ((:symbol "nil") . 54) (c++-mode . 21) (nil . 54) ((:file "/home/yavor/pprojects/openglFuckery/openglfuckery.cpp") . 13) ((:file "/home/yavor/pprojects/openglFuckery/main.cpp") . 4) ((:file "/home/yavor/pprojects/openglFuckery/mainTest.cpp") . 2) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 22) (c-mode . 33) ((:file "/home/yavor/pprojects/C-Programming/Chapter1.c") . 11)) "iostream" (((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 1) (c++-mode . 1) (nil . 1)) "string" (((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 4) ((:symbol "std") . 3) (c++-mode . 4) (nil . 4) ((:symbol "nil") . 1) ((:keyword "const") . 1) ((:keyword "using") . 1)) "cin" (((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 1) ((:symbol "std") . 1) (c++-mode . 1) (nil . 1)) "bookmark-set" ((emacs-lisp-mode . 2) (nil . 2) ((:keyword "interactive") . 1)) "interactive" (((:keyword "defun") . 1) (emacs-lisp-mode . 1) (nil . 1)) "make-something" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "list-bookmarks" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "bookmark-bmenu-list" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "cout" (((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 2) ((:symbol "std") . 2) (c++-mode . 2) (nil . 2) ((:keyword "using") . 1)) "secondNAme" (((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 2) ((:keyword "const") . 2) (c++-mode . 2) (nil . 2)) "stars" (((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 1) ((:keyword "const") . 1) (c++-mode . 1) (nil . 1)) "length" (((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 1) ((:symbol "stars") . 1) ((:keyword "const") . 1) (c++-mode . 1) (nil . 1)) "std" (((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 2) ((:keyword "using") . 2) (c++-mode . 2) (nil . 2)) "firstname" (((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 1) ((:keyword "const") . 1) (c++-mode . 1) (nil . 1)) "vector" (((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 1) (c++-mode . 1) (nil . 1)) "myvec" (((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 1) ((:keyword "while") . 1) (c++-mode . 1) (nil . 1)) "push_back" (((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 1) ((:symbol "myvec") . 1) ((:keyword "while") . 1) (c++-mode . 1) (nil . 1)) "index" (((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 3) ((:keyword "while") . 2) (c++-mode . 3) (nil . 3) ((:symbol "nil") . 1) ((:keyword "if") . 1)) "bind-key" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 2) ((:keyword "setq") . 2) (emacs-lisp-mode . 2) (nil . 2)) "define-key" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 11) ((:keyword "setq") . 5) (emacs-lisp-mode . 11) (nil . 11)) "org-agenda-mode-map" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 8) ((:keyword "setq") . 7) (emacs-lisp-mode . 8) (nil . 8) ((:keyword "bind-key") . 1)) "org-agenda-exit" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 3) ((:keyword "setq") . 2) (emacs-lisp-mode . 3) (nil . 3) ((:keyword "bind-key") . 1)) "org-agenda-next-item" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "org-agenda-previous-item" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "org-agenda-todo" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "org-agenda-next-line" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "org-agenda-previous-line" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) ((:keyword "setq") . 1) (emacs-lisp-mode . 1) (nil . 1)) "calendar-mode-map" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 8) (emacs-lisp-mode . 8) (nil . 8)) "calendar-forward-day" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) (emacs-lisp-mode . 1) (nil . 1)) "calendar-backward-day" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) (emacs-lisp-mode . 1) (nil . 1)) "calendar-backward-week" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 2) (emacs-lisp-mode . 2) (nil . 2)) "calendar-backward-month" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) (emacs-lisp-mode . 1) (nil . 1)) "calendar-forward-month" (((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1) (emacs-lisp-mode . 1) (nil . 1)) "requests" (((:file "/home/yavor/pprojects/RSMC/UITest.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "get" (((:file "/home/yavor/pprojects/RSMC/UITest.py") . 1) ((:symbol "requests") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "GLFW/" (((:file "/home/yavor/pprojects/openglFuckery/openglfuckery.cpp") . 1) (c++-mode . 2) (nil . 2) ((:file "/home/yavor/pprojects/openglFuckery/main.cpp") . 1)) "GLFW/glfw3.h" (((:file "/home/yavor/pprojects/openglFuckery/openglfuckery.cpp") . 1) (c++-mode . 2) (nil . 2) ((:file "/home/yavor/pprojects/openglFuckery/main.cpp") . 1)) "glad/glad.h" (((:file "/home/yavor/pprojects/openglFuckery/openglfuckery.cpp") . 1) (c++-mode . 4) (nil . 4) ((:file "/home/yavor/pprojects/openglFuckery/main.cpp") . 2) ((:file "/home/yavor/pprojects/openglFuckery/mainTest.cpp") . 1)) "glad/" (((:file "/home/yavor/pprojects/openglFuckery/main.cpp") . 2) (c++-mode . 3) (nil . 3) ((:file "/home/yavor/pprojects/openglFuckery/mainTest.cpp") . 1)) "kannada-composable-pattern" ((lisp-interaction-mode . 1) (nil . 1)) "java-font-lock-extra-types" ((lisp-interaction-mode . 1) (nil . 1)) "corruptProb" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "SOCK_STREAM" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:keyword "import") . 2) (python-mode . 2) (nil . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) "clientSocket" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 11) ((:keyword "import") . 1) (python-mode . 11) (nil . 11) ((:keyword "def") . 4) ((:keyword "if") . 1) ((:keyword "pass") . 1) ((:keyword "print") . 3) ((:keyword "nonlocal") . 1)) "connect" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 5) ((:symbol "clientSocket") . 5) ((:keyword "import") . 1) (python-mode . 5) (nil . 5) ((:keyword "pass") . 1) ((:keyword "print") . 1) ((:keyword "def") . 2)) "serverName" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 6) ((:keyword "import") . 1) (python-mode . 6) (nil . 6) ((:keyword "pass") . 1) ((:keyword "print") . 2) ((:keyword "def") . 2)) "serverSocketPort" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 6) ((:keyword "import") . 1) (python-mode . 6) (nil . 6) ((:keyword "pass") . 1) ((:keyword "print") . 2) ((:keyword "def") . 2)) "connectionStatus" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 4) ((:keyword "while") . 1) (python-mode . 4) (nil . 4) ((:keyword "global") . 2) ((:keyword "try") . 1)) "breaks" (((:file "/home/yavor/pprojects/JSExtTest/background.js") . 1) ((:symbol "mybook") . 1) ((:keyword "function") . 1) (js2-mode . 1) (nil . 1)) "send" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2) ((:symbol "clientSocket") . 2) ((:keyword "print") . 1) (python-mode . 2) (nil . 2) ((:keyword "def") . 1)) "loads" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2) ((:symbol "json") . 3) ((:keyword "print") . 4) (python-mode . 5) (nil . 5) ((:symbol "pickle") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 3) ((:keyword "def") . 1)) "newButton" (((:keyword "in") . 1) (python-mode . 1) (nil . 1)) "serverAddr" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1) ((:keyword "print") . 1) (python-mode . 1) (nil . 1)) "localhost" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "encode" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2) ((:symbol "strpcktDict") . 1) ((:keyword "print") . 1) (python-mode . 2) (nil . 2) ((:symbol "testPKT") . 1) ((:keyword "def") . 1)) "timeRNG" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 3) ((:keyword "def") . 3) (python-mode . 3) (nil . 3)) "testPKT" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1) ((:keyword "def") . 1) (python-mode . 1) (nil . 1)) "min_height" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1) ((:keyword "raise") . 1) (python-mode . 1) (nil . 1)) "uniform" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 3) ((:symbol "random") . 1) ((:keyword "def") . 3) (python-mode . 3) (nil . 3) ((:symbol "timeSeed") . 1) ((:symbol "timeRNG") . 1)) "Random" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2) ((:symbol "random") . 2) ((:keyword "def") . 2) (python-mode . 2) (nil . 2)) "prevSeqNum" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 2) ((:keyword "if") . 1) (python-mode . 2) (nil . 2) ((:keyword "print") . 1)) "responseNum" (((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 2) ((:keyword "print") . 2) (python-mode . 2) (nil . 2)) "raise" (((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1) ((:keyword "in") . 1) (python-mode . 1) (nil . 1)))) company-statistics--log [("class" (nil . 1) (python-mode . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("import" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2)) ("random" (nil . 9) (python-mode . 9) ((:keyword "import") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 9)) ("random" (nil . 1) (python-mode . 1) ((:keyword "self") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("seed" (nil . 7) (python-mode . 7) ((:keyword "self") . 2) ((:symbol "random") . 5) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 7)) ("timeSeed" (nil . 4) (python-mode . 4) ((:keyword "self") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 4)) ("numPackets" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("random" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("seed" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:symbol "random") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("corruptSeed" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("corruptRNG" (nil . 2) (python-mode . 2) ((:keyword "self") . 1) ((:symbol "self") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2)) ("corruptProb" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("socket" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("AF_INET" (nil . 2) (python-mode . 2) ((:keyword "import") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("SOCK_STREAM" (nil . 2) (python-mode . 2) ((:keyword "import") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("clientSocket" (nil . 11) (python-mode . 11) ((:keyword "import") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 11)) ("connect" (nil . 5) (python-mode . 5) ((:keyword "import") . 1) ((:symbol "clientSocket") . 5) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 5)) ("serverName" (nil . 6) (python-mode . 6) ((:keyword "import") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 6)) ("serverSocketPort" (nil . 6) (python-mode . 6) ((:keyword "import") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 6)) ("import" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("sys" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("clientSocket" (nil . 1) (python-mode . 1) ((:keyword "def") . 4) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("connectionStatus" (nil . 4) (python-mode . 4) ((:keyword "while") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 4)) ("False" (nil . 1) (python-mode . 1) ((:keyword "while") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("connectionStatus" (nil . 1) (python-mode . 1) ((:keyword "global") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("connectionStatus" (nil . 1) (python-mode . 1) ((:keyword "global") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("connectionStatus" (nil . 1) (python-mode . 1) ((:keyword "try") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("except" (nil . 1) (python-mode . 1) ((:keyword "try") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("clientSocket" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("clientSocket" (nil . 1) (python-mode . 1) ((:keyword "pass") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("connect" (nil . 1) (python-mode . 1) ((:keyword "pass") . 1) ((:symbol "clientSocket") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("serverName" (nil . 1) (python-mode . 1) ((:keyword "pass") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("serverSocketPort" (nil . 1) (python-mode . 1) ((:keyword "pass") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("format" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("payload" (nil . 3) (python-mode . 3) ((:keyword "print") . 3) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 3)) ("seqNum" (nil . 2) (python-mode . 2) ((:keyword "print") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2)) ("ackStatus" (nil . 5) (python-mode . 5) ((:keyword "print") . 5) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2)) ("nackStatus" (nil . 5) (python-mode . 5) ((:keyword "print") . 5) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2)) ("clientSocket" (nil . 1) (python-mode . 1) ((:keyword "print") . 3) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("send" (nil . 2) (python-mode . 2) ((:keyword "print") . 1) ((:symbol "clientSocket") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2)) ("payload" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("seqNum" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("ackStatus" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("nackStatus" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("loads" (nil . 5) (python-mode . 5) ((:keyword "print") . 4) ((:symbol "json") . 3) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2)) ("pckDict" (nil . 2) (python-mode . 2) ((:keyword "print") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2)) ("jsonDict" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("clientSocket" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("connect" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:symbol "clientSocket") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("serverName" (nil . 1) (python-mode . 1) ((:keyword "print") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("serverSocketPort" (nil . 1) (python-mode . 1) ((:keyword "print") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("continue" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("__name__" (nil . 2) (python-mode . 2) ((:keyword "if") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("AF_INET" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("SOCK_STREAM" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("serverSocket" (nil . 3) (python-mode . 3) ((:keyword "import") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 3)) ("bind" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:symbol "serverSocket") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("serverHost" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("serverPort" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("serverSocket" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("listen" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:symbol "serverSocket") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("serverSocket" (nil . 1) (python-mode . 1) ((:keyword "while") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("serverAddr" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("localhost" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("OSError" (nil . 1) (python-mode . 1) ((:keyword "except") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("serverName" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("serverSocketPort" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("clientSocket" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("connect" (nil . 1) (python-mode . 1) ((:keyword "def") . 2) ((:symbol "clientSocket") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("serverName" (nil . 1) (python-mode . 1) ((:keyword "def") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("serverSocketPort" (nil . 1) (python-mode . 1) ((:keyword "def") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("connectionID" (nil . 2) (python-mode . 2) ((:keyword "print") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 2)) ("connectionID" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("recieved" (nil . 6) (python-mode . 6) ((:keyword "print") . 6) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 6)) ("sendPkt" (nil . 2) (python-mode . 2) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2)) ("pickle" (nil . 3) (python-mode . 3) ((:keyword "import") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2)) ("pickle" (nil . 1) (python-mode . 1) ((:keyword "print") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("loads" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:symbol "pickle") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("pckDict" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("pickleDict" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("pickle" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("loads" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:symbol "pickle") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 3)) ("recieved" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("pcktDict" (nil . 2) (python-mode . 2) ((:keyword "print") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2)) ("clientSocket" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("strpcktDict" (nil . 2) (python-mode . 2) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2)) ("encode" (nil . 2) (python-mode . 2) ((:keyword "print") . 1) ((:symbol "strpcktDict") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2)) ("recieved" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("recieved" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("clientSocket" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("connect" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "clientSocket") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("serverName" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("serverSocketPort" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("payload" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("argv" (nil . 2) (python-mode . 2) ((:keyword "if") . 2) ((:symbol "sys") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("nonlocal" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("clientSocket" (nil . 1) (python-mode . 1) ((:keyword "nonlocal") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("random" (nil . 1) (python-mode . 1) ((:keyword "def") . 6) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("seed" (nil . 1) (python-mode . 1) ((:keyword "def") . 5) ((:symbol "random") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("random" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("seed" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "random") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("timeRNG" (nil . 3) (python-mode . 3) ((:keyword "def") . 3) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 3)) ("timeRNG" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("random" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("seed" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "random") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("timeSeed" (nil . 1) (python-mode . 1) ((:keyword "def") . 3) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("random" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("uniform" (nil . 3) (python-mode . 3) ((:keyword "def") . 3) ((:symbol "random") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 3)) ("random" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("Random" (nil . 2) (python-mode . 2) ((:keyword "def") . 2) ((:symbol "random") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 2)) ("timeSeed" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("seed" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "timeSeed") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("timeSeed" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("uniform" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "timeSeed") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("random" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("Random" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "random") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("corruptRNG" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("seed" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "corruptRNG") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("timeRNG" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("uniform" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "timeRNG") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("strpcktDict" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("sendPkt" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("clientSocket" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("send" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "clientSocket") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("testPKT" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("loads" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:symbol "json") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("recieved" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("jsonStuff" (nil . 3) (python-mode . 3) ((:keyword "print") . 3) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 3)) ("encode" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "testPKT") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("jsonStuff" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("SeqNum" (nil . 7) (python-mode . 7) ((:keyword "print") . 6) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 7)) ("SeqNum" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("SeqNum" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("recieved" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("dumps" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:symbol "json") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("pcktDict" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ClientProgram.py") . 1)) ("loads" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "json") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("jsonPacket" (nil . 7) (python-mode . 7) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 7)) ("SeqNum" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("prevSeqNum" (nil . 2) (python-mode . 2) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 2)) ("jsonPacket" (nil . 1) (python-mode . 1) ((:keyword "print") . 6) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("SeqNum" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("jsonPacket" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("SeqNum" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("jsonStuff" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("jsonPacket" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("jsonPacket" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("SeqNum" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("jsonPacket" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("ackStatus" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 3)) ("jsonPacket" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("nackStatus" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 3)) ("__name__" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("__main__" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("argv" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:symbol "sys") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("responseStatus" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("prevSeqNum" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("responseNum" (nil . 2) (python-mode . 2) ((:keyword "print") . 2) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 2)) ("responseNum" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("ackStatus" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("nackStatus" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("ackStatus" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("nackStatus" (nil . 1) (python-mode . 1) ((:keyword "print") . 1) ((:file "/home/yavor/classNotesSummer/Networking/AS2/ServerProgram.py") . 1)) ("urwid" (nil . 1) (python-mode . 1) ((:keyword "raise") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("urwid" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("ExitMainLoop" (nil . 1) (python-mode . 1) ((:keyword "in") . 2) ((:symbol "urwid") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("myloop" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("urwid" (nil . 1) (python-mode . 1) ((:keyword "raise") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("urwid" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("ExitMainLoop" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:symbol "urwid") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("urwid" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("ExitMainLoop" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:symbol "urwid") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("myloop" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("myloop" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("draw_screen" (nil . 10) (python-mode . 10) ((:keyword "in") . 6) ((:symbol "myloop") . 8) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 10)) ("draw_screen" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("myloop" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("set_alarm_at" (nil . 2) (python-mode . 2) ((:keyword "else") . 2) ((:symbol "myloop") . 2) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 2)) ("myColumns" (nil . 1) (python-mode . 1) ((:keyword "in") . 2) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("myloop" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("draw_screen" (nil . 1) (python-mode . 1) ((:keyword "else") . 4) ((:symbol "myloop") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("myloop" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("draw_screen" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:symbol "myloop") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("myloop" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("set_alarm_at" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:symbol "myloop") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("myloop" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("draw_screen" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:symbol "myloop") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("myloop" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("run" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:symbol "myloop") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("myloop" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("run" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:symbol "myloop") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("myloop" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("screen" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:symbol "myloop") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("draw_screen" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:symbol "screen") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("myloop" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("draw_screen" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:symbol "myloop") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("myloop" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("widget" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:symbol "myloop") . 3) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 3)) ("myColumns" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("newColumns" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("myloop" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("widget" (nil . 1) (python-mode . 1) ((:keyword "else") . 2) ((:symbol "myloop") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("myloop" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("draw_screen" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:symbol "myloop") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("myloop" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("draw_screen" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:symbol "myloop") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("True" (nil . 3) (python-mode . 3) ((:keyword "def") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 3)) ("displayStatus" (nil . 5) (python-mode . 5) ((:keyword "if") . 2) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 5)) ("True" (nil . 1) (python-mode . 1) ((:keyword "if") . 2) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("False" (nil . 4) (python-mode . 4) ((:keyword "if") . 2) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 4)) ("False" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("False" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("myloop" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("widget" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:symbol "myloop") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("myColumns" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("myloop" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("draw_screen" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:symbol "myloop") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("displayStatus" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("True" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("displayStatus" (nil . 1) (python-mode . 1) ((:keyword "else") . 2) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("False" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("displayStatus" (nil . 1) (python-mode . 1) ((:keyword "global") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("displayStatus" (nil . 1) (python-mode . 1) ((:keyword "else") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("company-selection-wrap-around" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("urwid" (nil . 1) (python-mode . 1) ((:keyword "in") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("tide-setup" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("include" (nil . 2) (c++-mode . 2) ((:symbol "nil") . 2) ((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 2)) ("stdio.h" (nil . 1) (c++-mode . 1) ((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 1)) ("include" (nil . 1) (c++-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 1)) ("iostream" (nil . 1) (c++-mode . 1) ((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 1)) ("string" (nil . 2) (c++-mode . 2) ((:symbol "std") . 1) ((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 2)) ("cin" (nil . 1) (c++-mode . 1) ((:symbol "std") . 1) ((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 1)) ("string" (nil . 1) (c++-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 1)) ("bookmark-set" (nil . 2) (emacs-lisp-mode . 2)) ("interactive" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "defun") . 1)) ("bookmark-set" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "interactive") . 1)) ("make-something" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("evil-leader/set-key" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("list-bookmarks" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("bookmark-bmenu-list" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("cout" (nil . 2) (c++-mode . 2) ((:symbol "std") . 2) ((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 2)) ("secondNAme" (nil . 2) (c++-mode . 2) ((:keyword "const") . 2) ((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 2)) ("string" (nil . 1) (c++-mode . 1) ((:keyword "const") . 1) ((:symbol "std") . 1) ((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 1)) ("stars" (nil . 1) (c++-mode . 1) ((:keyword "const") . 1) ((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 1)) ("length" (nil . 1) (c++-mode . 1) ((:keyword "const") . 1) ((:symbol "stars") . 1) ((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 1)) ("cout" (nil . 1) (c++-mode . 1) ((:keyword "using") . 1) ((:symbol "std") . 1) ((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 1)) ("std" (nil . 2) (c++-mode . 2) ((:keyword "using") . 2) ((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 2)) ("std" (nil . 1) (c++-mode . 1) ((:keyword "using") . 1) ((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 1)) ("string" (nil . 1) (c++-mode . 1) ((:keyword "using") . 1) ((:symbol "std") . 1) ((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 1)) ("secondNAme" (nil . 1) (c++-mode . 1) ((:keyword "const") . 1) ((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 1)) ("firstname" (nil . 1) (c++-mode . 1) ((:keyword "const") . 1) ((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 1)) ("vector" (nil . 1) (c++-mode . 1) ((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 1)) ("myvec" (nil . 1) (c++-mode . 1) ((:keyword "while") . 1) ((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 1)) ("push_back" (nil . 1) (c++-mode . 1) ((:keyword "while") . 1) ((:symbol "myvec") . 1) ((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 1)) ("index" (nil . 3) (c++-mode . 3) ((:keyword "while") . 2) ((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 3)) ("index" (nil . 1) (c++-mode . 1) ((:keyword "while") . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 1)) ("index" (nil . 1) (c++-mode . 1) ((:keyword "if") . 1) ((:file "/home/yavor/pprojects/CPP-Programming/HelloWorld.cpp") . 1)) ("bind-key" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "setq") . 2) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 2)) ("define-key" (nil . 11) (emacs-lisp-mode . 11) ((:keyword "setq") . 5) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 11)) ("org-agenda-mode-map" (nil . 8) (emacs-lisp-mode . 8) ((:keyword "setq") . 7) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 8)) ("org-agenda-exit" (nil . 3) (emacs-lisp-mode . 3) ((:keyword "setq") . 2) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 3)) ("bind-key" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("org-agenda-mode-map" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "bind-key") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("org-agenda-exit" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "bind-key") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("define-key" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("org-agenda-mode-map" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("org-agenda-exit" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("define-key" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("org-agenda-mode-map" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("org-agenda-next-item" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("define-key" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("org-agenda-mode-map" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("org-agenda-previous-item" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("org-agenda-mode-map" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("org-agenda-todo" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("org-agenda-mode-map" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("org-agenda-next-line" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("define-key" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("org-agenda-mode-map" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("org-agenda-previous-line" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "setq") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("define-key" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("calendar-mode-map" (nil . 8) (emacs-lisp-mode . 8) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 8)) ("calendar-forward-day" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("define-key" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("calendar-mode-map" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("calendar-backward-day" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("define-key" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("calendar-mode-map" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("calendar-backward-week" (nil . 2) (emacs-lisp-mode . 2) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 2)) ("define-key" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("calendar-mode-map" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("calendar-backward-week" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("define-key" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("calendar-mode-map" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("calendar-mode-map" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("calendar-backward-month" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("define-key" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("calendar-mode-map" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("calendar-mode-map" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("calendar-forward-month" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("class" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("def" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("urwid" (nil . 1) (python-mode . 1) ((:keyword "self") . 3) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("urwid" (nil . 1) (python-mode . 1) ((:keyword "def") . 2) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("urwid" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("import" (nil . 1) (python-mode . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("urwid" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("urwid" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("urwid" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/home/yavor/pprojects/RSMC/clientUI.py") . 1)) ("import" (nil . 1) (python-mode . 1) ((:file "/home/yavor/pprojects/RSMC/UITest.py") . 2)) ("urwid" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/yavor/pprojects/RSMC/UITest.py") . 1)) ("import" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/yavor/pprojects/RSMC/UITest.py") . 1)) ("requests" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/yavor/pprojects/RSMC/UITest.py") . 1)) ("get" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:symbol "requests") . 1) ((:file "/home/yavor/pprojects/RSMC/UITest.py") . 1)) ("include" (nil . 1) (c++-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/openglFuckery/openglfuckery.cpp") . 13)) ("include" (nil . 1) (c++-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/openglFuckery/openglfuckery.cpp") . 1)) ("include" (nil . 1) (c++-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/openglFuckery/openglfuckery.cpp") . 1)) ("include" (nil . 1) (c++-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/openglFuckery/openglfuckery.cpp") . 1)) ("include" (nil . 1) (c++-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/openglFuckery/openglfuckery.cpp") . 1)) ("include" (nil . 1) (c++-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/openglFuckery/openglfuckery.cpp") . 1)) ("include" (nil . 1) (c++-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/openglFuckery/openglfuckery.cpp") . 1)) ("include" (nil . 1) (c++-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/openglFuckery/openglfuckery.cpp") . 1)) ("include" (nil . 1) (c++-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/openglFuckery/openglfuckery.cpp") . 1)) ("GLFW/" (nil . 1) (c++-mode . 1) ((:file "/home/yavor/pprojects/openglFuckery/openglfuckery.cpp") . 1)) ("GLFW/glfw3.h" (nil . 1) (c++-mode . 1) ((:file "/home/yavor/pprojects/openglFuckery/openglfuckery.cpp") . 1)) ("include" (nil . 1) (c++-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/openglFuckery/openglfuckery.cpp") . 1)) ("include" (nil . 1) (c++-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/openglFuckery/openglfuckery.cpp") . 1)) ("include" (nil . 1) (c++-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/openglFuckery/openglfuckery.cpp") . 1)) ("include" (nil . 1) (c++-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/openglFuckery/openglfuckery.cpp") . 1)) ("glad/glad.h" (nil . 1) (c++-mode . 1) ((:file "/home/yavor/pprojects/openglFuckery/openglfuckery.cpp") . 1)) ("include" (nil . 1) (c++-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/openglFuckery/main.cpp") . 4)) ("glad/" (nil . 3) (c++-mode . 3) ((:file "/home/yavor/pprojects/openglFuckery/main.cpp") . 2)) ("glad/glad.h" (nil . 1) (c++-mode . 1) ((:file "/home/yavor/pprojects/openglFuckery/main.cpp") . 2)) ("include" (nil . 1) (c++-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/openglFuckery/main.cpp") . 1)) ("GLFW/" (nil . 1) (c++-mode . 1) ((:file "/home/yavor/pprojects/openglFuckery/main.cpp") . 1)) ("GLFW/glfw3.h" (nil . 1) (c++-mode . 1) ((:file "/home/yavor/pprojects/openglFuckery/main.cpp") . 1)) ("include" (nil . 1) (c++-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/openglFuckery/main.cpp") . 1)) ("include" (nil . 1) (c++-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/openglFuckery/main.cpp") . 1)) ("glad/" (nil . 1) (c++-mode . 1) ((:file "/home/yavor/pprojects/openglFuckery/main.cpp") . 1)) ("glad/glad.h" (nil . 1) (c++-mode . 1) ((:file "/home/yavor/pprojects/openglFuckery/main.cpp") . 1)) ("include" (nil . 1) (c++-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/openglFuckery/mainTest.cpp") . 2)) ("glad/" (nil . 1) (c++-mode . 1) ((:file "/home/yavor/pprojects/openglFuckery/mainTest.cpp") . 1)) ("glad/glad.h" (nil . 1) (c++-mode . 1) ((:file "/home/yavor/pprojects/openglFuckery/mainTest.cpp") . 1)) ("include" (nil . 1) (c++-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/openglFuckery/mainTest.cpp") . 1)) ("glad.h" (nil . 1) (c++-mode . 1) ((:file "/home/yavor/pprojects/openglFuckery/mainTest.cpp") . 1)) ("unbind-key" (nil . 1) (emacs-lisp-mode . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("package-menu-mode-map" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "unbind-key") . 1) ((:file "/home/yavor/.emacs.d/newInit.org[*Org Src newInit.org[ emacs-lisp ]*]") . 1)) ("backward" (nil . 1) (c++-mode . 1) ((:keyword "while") . 1) ((:file "/home/yavor/pprojects/openglFuckery/mainTest.cpp") . 1)) ("kannada-composable-pattern" (nil . 1) (lisp-interaction-mode . 1)) ("java-font-lock-extra-types" (nil . 1) (lisp-interaction-mode . 1)) ("printf" (nil . 1) (c-mode . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1)) ("include" (nil . 1) (c-mode . 12) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 12)) ("assert.h" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1)) ("signal.h" (nil . 1) (c-mode . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1)) ("string.h" (nil . 2) (c-mode . 2) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 2)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1)) ("string.h" (nil . 1) (c-mode . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1)) ("stdio.h" (nil . 1) (c-mode . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1)) ("assert" (nil . 1) (c-mode . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1)) ("ctype.h" (nil . 2) (c-mode . 2) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 2)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1)) ("stdlib.h" (nil . 1) (c-mode . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1)) ("ctype.h" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/Chapter1.c") . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1)) ("string.h" (nil . 1) (c-mode . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/Chapter1.c") . 1)) ("assert.h" (nil . 1) (c-mode . 1) ((:file "/home/yavor/pprojects/C-Programming/Chapter1.c") . 1)) ("sin" (nil . 1) (c-mode . 1) ((:file "/home/yavor/pprojects/C-Programming/Chapter1.c") . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/Chapter1.c") . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/Chapter1.c") . 1)) ("printf" (nil . 1) (c-mode . 1) ((:file "/home/yavor/pprojects/C-Programming/Chapter1.c") . 1)) ("strcmp" (nil . 1) (c-mode . 1) ((:file "/home/yavor/pprojects/C-Programming/Chapter1.c") . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/Chapter1.c") . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/Chapter1.c") . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/Chapter1.c") . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/Chapter1.c") . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/Chapter1.c") . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/Chapter1.c") . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/Chapter1.c") . 1)) ("mupdf/" (nil . 1) (c-mode . 1) ((:file "/home/yavor/pprojects/C-Programming/Chapter1.c") . 1)) ("mupdf/pdf.h" (nil . 1) (c-mode . 1) ((:file "/home/yavor/pprojects/C-Programming/Chapter1.c") . 1)) ("include" (nil . 1) (c-mode . 1) ((:symbol "nil") . 1) ((:file "/home/yavor/pprojects/C-Programming/CStuff.c") . 1))] company-statistics--index 163)